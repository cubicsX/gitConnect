/*
----THIS FILE ONLY PROVIDES STRUCTURE, IT IS NOT CODE.--------

FINAL STRUCTURE

Collaborators : [
{
	“projectId” : id,
	userId: id,
	‘authority’  :   ‘owner’/ ‘collaborators’,
	'role' : [ ] // because when user will send request, he has to tell which role he is applying for.

	'status' : string
		'accepted' // he is accepted            ( show only accepted users in project desc page )
		'pending'  // user not accepted yet,
		'rejected' // user is rejected

    ‘comments’ :  [
		"username": //person who commented
        “comment”: string
	],
}
]


User = {
    “name” :<string>req.user.data.name, -- you know this
    "username”:<string> req.user.data.login, -- username on github
    “email” :<string> req.user.data.email, --user email
    “githubProfile”:<string> req.user.data.html_url, -- link to user profile on github
    “avatar”:<string-photo-link> req.user.data.avatar_url, --Profile picture on github url
    “skills”: [ nodejs, python etc.. ] -- skills user has,
}

Project = {
    _id : unique id ( generated by mongodb )
    “title” : Title of the Project,
    “shortDesc” : Short description about the Project,
    “githubRepo”: GitHub link to that project,
    “postDate”: When project posted out website

    “status” (string) : Status of the project {
   	active - still need more collaboratore, ( shown in the search results )
	ongoing - required new devs, ( shown in search )
	hide - got required devs, so hide project from search results ( not shown )

    }
    tags: [ python, android, social-media etc.. ] //tags for searching the project
    skillsRequired: [ android, node, python, ML etc..] //required skills for the project.
    collaboratorCount: int, //number of active collaborators
}

-----FUTURE CHANGES----------
user location ( only City, Country )

*/
